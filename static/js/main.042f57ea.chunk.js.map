{"version":3,"sources":["components/Editor.js","hooks/useLocal_storage.js","components/Files.js","App.js","index.js"],"names":["Editor","props","useState","open","setOpen","language","displayName","value","onChange","className","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","theme","mode","lineNumbers","useLocal_storage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","Files","changeProps_func","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","html_editor","select","setSelect","timeout","setTimeout","clearTimeout","css_editor","js_editor","output","lang","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.042f57ea.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/mode/xml/xml';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/mode/css/css';\r\nimport {Controlled as ControlledEditor} from 'react-codemirror2';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faCompressAlt,faExpandAlt} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nexport default function Editor(props) {\r\n    const [open, setOpen] = useState(true)\r\n    const {\r\n        language,\r\n        displayName,\r\n        value,\r\n        onChange,\r\n    }=props;\r\n\r\n    \r\n    function handleChange(editor,data,value){\r\n        onChange(value)\r\n    }\r\n    function toggle_close(){\r\n        setOpen(prevOpen=>!prevOpen);\r\n    }\r\n    return (\r\n        <div className={`editor-container ${open ? '':'collapsed'}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button \r\n                className=\"Expand-collapse-btn\"\r\n                onClick={()=>toggle_close()}>\r\n                    {/* {open_close} */}\r\n                    <FontAwesomeIcon icon={open? faCompressAlt:faExpandAlt}/>\r\n                </button>\r\n            </div>\r\n            <ControlledEditor\r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className=\"code-mirror-wrapper\"\r\n                options={{\r\n                    lineWrapping:true,\r\n                    lint:true,\r\n                    theme:'material',\r\n                    mode:language,\r\n                    lineNumbers:true\r\n                }}\r\n            />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import {useEffect,useState} from 'react'\r\n\r\n// There will be a bunch of values in localst\r\nconst PREFIX_VALUE='WebEditor'\r\nexport default function useLocal_storage(key,initialValue) {\r\n    const prefixedKey=PREFIX_VALUE+key\r\n\r\n    const  [value, setValue] = useState(()=>{\r\n        const jsonValue=localStorage.getItem(prefixedKey)\r\n\r\n        if(jsonValue!=null) return JSON.parse(jsonValue)\r\n\r\n        if(initialValue==='function'){\r\n            return initialValue()\r\n        }else{\r\n            return initialValue\r\n        }\r\n    })\r\n\r\n    \r\n    useEffect(()=>{\r\n        localStorage.setItem(prefixedKey,JSON.stringify(value))\r\n    },[prefixedKey,value])\r\n    return [value,setValue]\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Files(props) {\r\n    // const changeProps_func=props.changeProps_func;\r\n    return (\r\n        <div className=\"files\">\r\n            <h3 className=\"title\">CODE EDITOR</h3>\r\n            <hr className=\"line\" />\r\n            \r\n            <div className=\"buttons\">\r\n            <button onClick={()=>props.changeProps_func('html')}>index.html</button>\r\n            <button onClick={()=>props.changeProps_func('css')}>index.css</button>\r\n            <button onClick={()=>props.changeProps_func('js')}>index.js</button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","\nimport React, { useState, useEffect } from 'react';\nimport Editor from './components/Editor';\nimport useLocal_storage from './hooks/useLocal_storage';\nimport Files from './components/Files';\nfunction App() {\n  const [html, setHtml] = useLocal_storage('html',`<!--You can add all your HTML code here-->\n<div class=\"center\">\n  <h1> Hello! peeps</h1>\n  <h3>Edit Html Css and Js files here and check the output live here</h3>\n</div>`)\n  const [css, setCss] = useLocal_storage('css',`/*You can add all your css here*/\n  .center{\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n    color:white;\n}\nbody{\n    background-color: #66b9ca;\n}\n`)\n  const [js, setJs] = useLocal_storage('js','//You can add all your JS code here')\n  const [srcDoc, setSrcDoc] = useState('');\n  const  html_editor={\n    language:\"xml\",\n    displayName:\"index.html\",\n    value:html,\n    onChange:setHtml  \n  }\n  const [select, setSelect]=useLocal_storage('output',1)\n  // const [state, setstate] = useState(initialState)\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n    <html>\n      <body> ${html} </body>\n      <style> ${css} </style>\n      <script> ${js} </script> \n    </html> `\n      )\n    }, 300);\n    return () => {\n      clearTimeout(timeout);\n    }\n  }, [html, css, js])\n\n  var css_editor={\n    language:\"css\",\n    displayName:\"index.css\",\n    onChange:setCss,\n    value:css,\n  }\n\n  var js_editor={\n    language:\"javascript\",\n    displayName:\"index.js\",\n    value:js,\n    onChange:setJs  \n  }\n\n\n    function changeProps_func(lang){\n      if(lang==='html'){\n        setSelect(1)\n      }\n      else if(lang==='css'){\n        setSelect(2)\n      }\n      else if(lang==='js'){\n        setSelect(3)\n      }\n    }\n    var output='';\n    if(select===1){\n      output=<Editor\n        {...html_editor}\n      />\n    }else if(select===2){\n      output=<Editor\n      {...css_editor}\n      />\n    }else if(select===3){\n      output=<Editor\n      {...js_editor}\n    />\n    }\n  return (\n    <>  \n      <div className=\"pane top-pane\">\n        <Files\n        changeProps_func={changeProps_func}\n        />\n      {output}\n      </div>\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title='output'\n          sandbox='allow-scripts'\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}